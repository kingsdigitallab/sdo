<?xml version="1.0" encoding="UTF-8"?>
<map:sitemap xmlns:map="http://apache.org/cocoon/sitemap/1.0">

  <!--
    
    xMod configuration sitemap.
    
    This sitemap defines defaults that are sensible across all
    projects, and provides pipelines for common functionality. The
    defaults can be overridden in the project-specific sitemap(s).
    
    The top-level project-specific sitemap, config.xmap, is mounted
    from here.

  -->

  <map:components>
    <map:transformers default="saxon">
      <map:transformer logger="sitemap.transformer.solr" name="solr"
        src="uk.ac.kcl.cch.xmod.cocoon.transformation.SolrTransformer" />

      <map:transformer logger="sitemap.transformer.sesame" name="sesame"
                       src="uk.ac.kcl.cch.xmod.cocoon.transformation.SesameTransformer" />
    </map:transformers>

    <map:serializers>
      <map:serializer logger="sitemap.serializer.xhtml" mime-type="text/html; charset=utf-8" name="xhtml"
        pool-max="${xhtml-serializer.pool-max}" src="org.apache.cocoon.serialization.XMLSerializer">
        <doctype-public>-//W3C//DTD XHTML 1.0 Strict//EN</doctype-public>
        <doctype-system>http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd</doctype-system>
        <encoding>UTF-8</encoding>
        <indent>yes</indent>
        <omit-xml-declaration>yes</omit-xml-declaration>
      </map:serializer>            
    </map:serializers>
  </map:components>

  <map:pipelines>
    <map:component-configurations>
      <global-variables />
    </map:component-configurations>

    <!-- Properties pipeline. -->
    <map:pipeline id="xmod-properties" internal-only="true">
      <map:match pattern="_internal/properties/properties.xsl">
        <map:generate src="../../properties/properties.xml" />
        <map:transform src="../../stylesheets/xmod/properties/properties-generator.xsl" />
        <map:serialize type="xml" />
      </map:match>
    </map:pipeline>

    <!-- Menu pipeline. -->
    <map:pipeline id="xmod-menu" internal-only="true">
      <map:match pattern="_internal/menu/*.xml">
        <map:generate src="../../xml/menu/{1}.xml" />
        <map:transform src="../../stylesheets/xmod/menu/normalise-menu.xsl" />
        <map:serialize type="xml" />
      </map:match>
    </map:pipeline>

    <!-- Metadata pipeline. -->
    <map:pipeline id="xmod-metadata" internal-only="true">
      <map:match pattern="_internal/allxmlcontent.xml">
        <map:generate src="../../xml/content" type="directory">
          <map:parameter name="depth" value="99" />
          <map:parameter name="exclude" value="\.svn" />
        </map:generate>
        <map:serialize type="xml" />
      </map:match>

      <map:match pattern="_internal/metadata/*/**.xml">
        <map:generate src="../../xml/content/{2}.xml" />
        <map:transform src="../../stylesheets/xmod/metadata/{1}-metadata-generator.xsl">
          <map:parameter name="path" value="{2}.xml" />
        </map:transform>
        <map:serialize type="xml" />
      </map:match>

      <map:match pattern="_internal/metadata/*.xml">
        <map:generate src="cocoon://_internal/allxmlcontent.xml" />
        <map:transform src="../../stylesheets/xmod/metadata/xinclude.xsl">
          <map:parameter name="type" value="{1}" />
        </map:transform>
        <map:transform type="xinclude" />
        <map:serialize type="xml" />
      </map:match>
    </map:pipeline>

    <!-- Solr indexing and querying. -->
    <map:pipeline id="xmod-solr" type="noncaching" internal-only="false">
      <!-- Indexing. -->
      <!-- First deletes the document from the Solr, and then adds the
           document to Solr -->
      <map:match pattern="_internal/solr/index/*/**.xml">
        <map:aggregate element="response">
          <map:part element="delete" src="cocoon:/_internal/solr/delete-by-file-path/{2}.xml" />
       	  <map:part element="add" src="cocoon:/_internal/solr/add/{1}/{2}.xml" /> 
          <map:part element="optimize" src="cocoon:/_internal/solr/optimize" /> 
        </map:aggregate>
        <map:serialize type="xml" />
      </map:match>

      <!-- Deleting. -->
      <map:match pattern="_internal/solr/delete-by-file-path/**.xml">
        <map:generate src="empty:empty" />
        <map:transform src="../../stylesheets/local/solr/delete-by-file-path.xsl"> 
          <map:parameter name="file-path" value="{1}" />
        </map:transform>
        <map:transform type="solr">
          <map:parameter name="url" value="{global:solr-server}" />
        </map:transform>
        <map:serialize type="xml" />
      </map:match>

      <!-- Adding TEI with EATS. -->
      <map:match pattern="_internal/solr/add/tei-eats/**.xml">
        <map:aggregate element="source">
          <map:part element="tei" src="cocoon://private/solr/tei/tei-eats/{1}.xml" />
          <map:part element="eats" src="cocoon://private/eats/entities.xml" />
          <map:part element="repos" src="../../xml/metadata/repos.xml" />
        </map:aggregate>
       <map:transform src="../../stylesheets/local/solr/tei-eats-to-solr.xsl"> 
       <!-- test stylesheet -->
      <!-- <map:transform src="../../stylesheets/local/solr/tei-eats-to-solr-test.xsl">-->
          <map:parameter name="file-path" value="{1}" />
        </map:transform>
     <map:transform type="solr">
          <map:parameter name="url" value="{global:solr-server}" />
        </map:transform>   <!--  -->
        <map:serialize type="xml" />
      </map:match>

      <!-- Adding TEI with EATS specifying the authority. The first parameter is the authority id. -->
      <map:match pattern="_internal/solr/add/tei-eats/*/**.xml">
        <map:aggregate element="source">
          <map:part element="tei" src="cocoon://private/solr/tei-eats/{2}.xml" />
          <map:part element="eatsml" src="cocoon:/_internal/eats/{1}/entities.xml" />
          <map:part element="repos" src="../../xml/metadata/repos.xml" />
        </map:aggregate>
        <map:transform src="../../stylesheets/local/solr/tei-eats-to-solr.xsl">
          <map:parameter name="file-path" value="{2}" />
        </map:transform>        
        <map:transform type="solr">
          <map:parameter name="url" value="{global:solr-server}" />
        </map:transform> <!---->
        <map:serialize type="xml" />
      </map:match>

      <!-- Adding TEI only. The first parameter is the file type. 
     <map:match pattern="_internal/solr/add/*/**.xml">
        <map:generate src="cocoon://private/solr/tei/{1}/{2}.xml" />
        <map:transform src="../../stylesheets/local/solr/{1}-to-solr.xsl">
          <map:parameter name="file-path" value="{2}" />
        </map:transform>
        <map:transform type="solr">
          <map:parameter name="url" value="{global:solr-server}" />
        </map:transform>
        <map:serialize type="xml" />
      </map:match> -->

      <!-- Optimize. -->
      <map:match pattern="_internal/solr/optimize">
        <map:generate src="empty:optimize" />
        <map:transform type="solr">
          <map:parameter name="url" value="{global:solr-server}" />
        </map:transform>
        <map:serialize type="xml" />
      </map:match>

      <!-- Querying. -->
      <map:match pattern="_internal/solr/query/*">
        <map:generate src="{global:solr-server}select/?{1}" />
        <map:serialize type="xml" />
      </map:match>
    </map:pipeline>

    <!-- EATS -->
    <map:pipeline id="xmod-eats" internal-only="false">
      <!-- Exports all the entities in EATSML -->
      <map:match pattern="_internal/eats/entities.xml">
        <map:generate src="../../xml/metadata/eatsml.xml" />
        <map:transform src="../../stylesheets/xmod/solr/normalize-eats-for-solr.xsl" />
        <map:serialize type="xml" />
      </map:match>

      <!-- Exports all the entities in EATSML: this is used by the solr build file, it downloads all the entities in 
        EATSML to reduce the performance impact of accessing the EATS server for it all the time. -->
      <map:match pattern="_internal/download/eats/eatsml.xml">
        <map:generate src="{global:eats-server}edit/export/eatsml/" />
        <map:serialize type="xml" />
      </map:match>

      <!-- Exports all the entities that are associated with an authority (id) in EATSML -->
      <map:match pattern="_internal/eats/*/entities.xml">
        <map:generate src="{global:eats-server}edit/export/eatsml/{1}/" />
        <map:transform src="../../stylesheets/xmod/solr/normalize-eats-for-solr.xsl" />
        <map:serialize type="xml" />
      </map:match>

      <!-- Exports a specific entity in EATSML -->
      <map:match pattern="_internal/eats/*/*.xml">
        <map:generate src="{global:eats-server}lookup_no_annotation/?authority={1}&amp;record_id={2}" />
        <map:serialize type="xml" />
      </map:match>
    </map:pipeline>

    <!-- Templating. -->
    <map:pipeline id="xmod-templating" internal-only="true">
      <!-- Transform an XML template into an XSLT, handling template
           inheritance. -->
      <map:match pattern="_internal/template/**.xsl">
        <map:generate src="../../xml/template/{1}.xml" />
        <map:transform type="xinclude" />
        <map:transform src="../../stylesheets/xmod/template/inherit-template.xsl" />
        <map:serialize type="xml" />
      </map:match>
    </map:pipeline>

    <!-- Mount sub-sitemaps. -->
    <map:pipeline>
      <!-- ODD handling (part of xMod). -->
      <map:match pattern="_internal/odd/**">
        <map:mount check-reload="yes" src="odd.xmap" uri-prefix="_internal/odd/" />
      </map:match>

      <!-- Schematron handling (part of xMod). -->
      <map:match pattern="_internal/schematron/**">
        <map:mount check-reload="yes" src="schematron.xmap" uri-prefix="_internal/schematron/" />
      </map:match>

      <!-- Main project-specific sitemap, matching on the remaining
           URL space. -->
      <map:match pattern="**">
        <map:mount check-reload="yes" src="../../main.xmap" uri-prefix="" />
      </map:match>
    </map:pipeline>
  </map:pipelines>
</map:sitemap>
