<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." default="prepare" name="xMod">
  <import file="buildconf/build-antxtras.xml" />
  <import file="buildconf/build-svn.xml" />

  <!-- properties -->
  <property location="${basedir}/build" name="build.dir" />

  <property name="svn.update" value="true" />
  <condition property="svn.no.update">
    <equals arg1="${svn.update}" arg2="false" casesensitive="false" />
  </condition>

  <property name="assets.dir.name" value="_a" />
  <property location="${basedir}/${assets.dir.name}" name="assets.dir" />

  <property name="images.dir.name" value="images" />
  <property location="${basedir}/${images.dir.name}" name="images.dir" />

  <property location="${basedir}/src/xml/menu" name="menu.dir" />

  <property location="${basedir}/src/xml/metadata" name="metadata.dir" />

  <property location="${basedir}/properties" name="properties.dir" />

  <property name="properties.type" value="" />
  <condition else="${basedir}/properties/properties.xml" property="properties"
    value="${basedir}/properties/${properties.type}-properties.xml">
    <not>
      <equals arg1="${properties.type}" arg2="" />
    </not>
  </condition>

  <property name="schema.dir.name" value="schema" />
  <property location="${basedir}/${schema.dir.name}" name="schema.dir" />

  <property location="${basedir}/src/xml/content" name="source.dir" />

  <fileset dir="${source.dir}" id="source.xml" includes="**/*.xml" />
  <pathconvert property="source.xml.set" refid="source.xml" targetos="unix">
    <map from="${source.dir}/" to="" />
    <map from="${source.dir}\" to="" />
  </pathconvert>

  <property location="${basedir}/stylesheets" name="style.dir" />

  <target name="validate">
    <xmlvalidate failonerror="yes" lenient="yes">
      <fileset dir="cocoon" includes="**/*.xmap" />
      <fileset dir="${properties.dir}" includes="**/*.xml" />
      <fileset dir="${source.dir}" includes="**/*.xml" />
      <fileset dir="${style.dir}" includes="**/*.xsl" />
    </xmlvalidate>
  </target>

  <target depends="validate" name="prepare">
    <mkdir dir="${build.dir}" />

    <condition else="false" property="properties.present">
      <available file="${properties}" type="file" />
    </condition>
    <fail message="Missing properties file: ${properties}">
      <condition>
        <isfalse value="${properties.present}" />
      </condition>
    </fail>
  </target>

  <target depends="prepare" name="prepare-metadata">
    <antcall target="svn-update" />

    <xslt in="${properties.dir}/properties.xml" out="${source.dir}/_xinclude.xml"
      style="${style.dir}/metadata/xinclude.xsl">
      <factory name="net.sf.saxon.TransformerFactoryImpl" />

      <param expression="${source.xml.set}" name="fileset" />
    </xslt>

    <xslt in="${source.dir}/_xinclude.xml" out="${metadata.dir}/files.xml"
      style="${style.dir}/metadata/generate-files-metadata.xsl">
      <factory name="net.sf.saxon.TransformerFactoryImpl">
        <attribute name="http://saxon.sf.net/feature/xinclude-aware" value="true" />
      </factory>
    </xslt>

    <xslt in="${source.dir}/_xinclude.xml" out="${metadata.dir}/images.xml"
      style="${style.dir}/metadata/generate-images-metadata.xsl">
      <factory name="net.sf.saxon.TransformerFactoryImpl">
        <attribute name="http://saxon.sf.net/feature/xinclude-aware" value="true" />
      </factory>
    </xslt>

    <xslt in="${source.dir}/_xinclude.xml" out="${metadata.dir}/indexes.xml"
      style="${style.dir}/metadata/generate-index-metadata.xsl">
      <factory name="net.sf.saxon.TransformerFactoryImpl">
        <attribute name="http://saxon.sf.net/feature/xinclude-aware" value="true" />
      </factory>
    </xslt>

    <delete file="${source.dir}/_xinclude.xml" />
  </target>
  
  <target name="clean">
    <delete failonerror="false" file="${source.dir}/_xinclude.xml" />
    <delete failonerror="false" file="${style.dir}/properties/properties.xsl" />
    <delete dir="${build.dir}" />
  </target>
</project>
